{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "memorybank-staging.herokuapp.com/",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/user": {
      "get": {
        "description": "Returns information about logged in user, requires a token",
        "operationId": "findPets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "type": "string",
          }
        ],
        "responses": {
          "200": {
            "description": "user information",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes user",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "type": "string",
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "description": "Sign in to users account",
        "operationId": "signIn",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "user's email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "user's password",
            "required": true,
            "type": "string"
          },
        ],
        "responses": {
          "200": {
            "description": "JWT token",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "description": "Sign user up",
        "operationId": "signUp",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "user's email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "displayName",
            "in": "body",
            "description": "user's email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "user's password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JWT token",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        }
      }
    },
    "/event/create": {
      "post": {
        "description": "Creates event in the database, returns status",
        "operationId": "findPets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "type": "string",
          },
          {
            "name": "event_name",
            "in": "body",
            "description": "event name",
            "required": true,
            "type": "string",
          },
          {
            "name": "event_description",
            "in": "body",
            "description": "event desriptions",
            "required": true,
            "type": "string",
          },
          {
            "name": "event_location",
            "in": "body",
            "description": "event location",
            "required": true,
            "type": "string",
          },
          {
            "name": "event_start_time",
            "in": "body",
            "description": "event start time",
            "required": true,
            "type": "string",
          },
          {
            "name": "event_end_time",
            "in": "body",
            "description": "event end time",
            "required": true,
            "type": "string",
          },
        ],
        "responses": {
          "200": {
            "description": "event_id",
            "schema": {
              "type": "message",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
    },
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "user": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "email": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        }
      }
    },
    "Message": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Token": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
  }
}
